#这个文件它会被发布到classpath中，并且被Spring-boot自动读取
#端口、上下文根、编码等设置
server.port= 8082
server.servlet.context-path= /

spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding= UTF-8

#视图解析器进行配置(#设置视图解析器路径 #设置视图解析器后缀)
#spring.mvc.view.prefix= /
#spring.mvc.view.suffix=.jsp

#静态文件访问
#spring.mvc.static-path-pattern=/**

#数据库连接
spring.datasource.druid.url=jdbc:sqlserver://127.0.0.1:1433;DatabaseName=gkzp
spring.datasource.druid.username=sa
spring.datasource.druid.password=nsoft
spring.datasource.druid.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
#*************************************** druid连接池配置 *********************************************
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.maxActive=50
# 配置获取连接等待超时的时间（ms）
spring.datasource.druid.maxWait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.validation-query-timeout=60000
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=100000
##*******************监控配置 begin***************************###
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall
#状态监控（SQL监控 配置StatFilter）
spring.datasource.druid.filter.stat.db-type=sqlserver
spring.datasource.druid.filter.stat.enabled=true
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=5000
#状态监控（防火墙 配置WallFilter）
spring.datasource.druid.filter.wall.db-type=sqlserver
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#监控过滤器（配置_配置WebStatFilter）
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
#druid监控页面
spring.datasource.druid.stat-view-servlet.enabled= true
spring.datasource.druid.stat-view-servlet.url-pattern= /druid/*
spring.datasource.druid.stat-view-servlet.reset-enable= false
spring.datasource.druid.stat-view-servlet.login-username= nsoft
spring.datasource.druid.stat-view-servlet.login-password= nsoft1234
#spring.datasource.druid.stat-view-servlet.allow= 127.0.0.1
##*******************监控配置 end*****************************###







#*************************************** Redis配置 *********************************************
# Redis数据库索引（默认为0）
spring.redis.database=1
spring.redis.port=6379
spring.redis.host=127.0.0.1
spring.redis.password=123456
spring.redis.timeout=60000
spring.redis.jedis.pool.max-active=100
spring.redis.jedis.pool.max-idle=5
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-wait=60000
#*************************************** spring session 配置*********************************************
spring.session.store-type=redis
spring.session.redis.namespace=gkzpSession
spring.session.redis.flush-mode=on_save
spring.session.timeout=1800





#禁用缓存的参数 开发时可以用到。这样html页面有改动的时候我们只需要用快捷键crtl+F9重新编译下就可以在页面看结果，而不需要再次启动Tomcat服务了
spring.thymeleaf.cache=false


#配置.xml文件路径(classpath表示src/main/resources/     classpath下的META-INF/resources目录、resources目录、static目录和public目录中的静态资料是可以直接通过 ” http://xxx.com/ 静态资源” 的方式访问到的(浏览器访问,直接是项目域名+静态资源名称 即可访问，不用带上静态资源所在的目录名称))
mybatis.config-location =classpath:resources/mybatis-config.xml
#Mybatis SQL文件、实体类别名扫描的包
mybatis.mapper-locations=classpath*:mapper/**/*Mapper.xml
#mybatis.type-aliases-package=com.nsoft.gkzp.system.sysuserser.entity  #实体类包名 （例子项目的包名是com.shizhao.project.springdemo.model）


#日志自定义文件（如果log4j2配置文件名为log4j2-spring.xml，则此处无需配置，因springboot默认查询log4j2-spring.xml）
logging.config=classpath:resources/log4j2_config.xml
#日志级别
logging.level.com.baeldung.testloglevel=DEBUG




